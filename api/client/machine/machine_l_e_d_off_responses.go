// Code generated by go-swagger; DO NOT EDIT.

package machine

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/metal-pod/metal-go/api/models"
)

// MachineLEDOffReader is a Reader for the MachineLEDOff structure.
type MachineLEDOffReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *MachineLEDOffReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewMachineLEDOffOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewMachineLEDOffDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewMachineLEDOffOK creates a MachineLEDOffOK with default headers values
func NewMachineLEDOffOK() *MachineLEDOffOK {
	return &MachineLEDOffOK{}
}

/*MachineLEDOffOK handles this case with default header values.

OK
*/
type MachineLEDOffOK struct {
	Payload *models.V1MachineResponse
}

func (o *MachineLEDOffOK) Error() string {
	return fmt.Sprintf("[POST /v1/machine/{id}/power/led-off][%d] machineLEDOffOK  %+v", 200, o.Payload)
}

func (o *MachineLEDOffOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1MachineResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewMachineLEDOffDefault creates a MachineLEDOffDefault with default headers values
func NewMachineLEDOffDefault(code int) *MachineLEDOffDefault {
	return &MachineLEDOffDefault{
		_statusCode: code,
	}
}

/*MachineLEDOffDefault handles this case with default header values.

Error
*/
type MachineLEDOffDefault struct {
	_statusCode int

	Payload *models.HttperrorsHTTPErrorResponse
}

// Code gets the status code for the machine l e d off default response
func (o *MachineLEDOffDefault) Code() int {
	return o._statusCode
}

func (o *MachineLEDOffDefault) Error() string {
	return fmt.Sprintf("[POST /v1/machine/{id}/power/led-off][%d] machineLEDOff default  %+v", o._statusCode, o.Payload)
}

func (o *MachineLEDOffDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.HttperrorsHTTPErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
